" vi互換を切る
if &compatible
    set nocompatible
endif

"""""""""""
" plugins "
"""""""""""

" プラグインが実際にインストールされるディレクトリ
let s:dein_plugins_dir = expand('$HOME/.cache/dein/')
" dein.vim本体
let s:dein_repo_dir = expand('$HOME/.cache/dein/repos/github.com/Shougo/dein.vim')

" dein.vimがなければgithubからDownload
if &runtimepath !~# '/dein.vim'
    if !isdirectory(s:dein_repo_dir)
        execute '!git clone https://github.com/Shougo/dein.vim' s:dein_repo_dir
    endif
    execute 'set runtimepath^='. fnamemodify(s:dein_repo_dir, ':p')
endif

" 設定開始
if dein#load_state(s:dein_plugins_dir)
    call dein#begin(s:dein_plugins_dir)

    "
    " dein.vim
    " 
    call dein#add(s:dein_repo_dir)

    "
    " load and cache toml
    "
    let s:toml = expand('$HOME/.vim/dein.toml')
    call dein#load_toml(s:toml)

    " 設定終了
    call dein#end()
    call dein#save_state()
endif

if dein#check_install()
    call dein#install()
endif



""""""""""""
" 基本設定 "
""""""""""""
"
" ファイル
"
" 文字エンコーディング設定
set encoding=utf-8
"swapファイルを作らない
set noswapfile
"バックアップを作らない
set nowritebackup
" filetype の設定, plugin の読み込み, indent を on
filetype plugin indent on

"
" 編集
"
" オートインデント
set autoindent
set smartindent
" タブを半角スペースに展開
set expandtab
set shiftwidth=4
set softtabstop=4
" 文字がないところでもカーソル移動を可能にする
set virtualedit=all
" バックスペース
set backspace=indent,eol,start
" クリップボード
set clipboard=unnamedplus,autoselect
" 補完候補
set wildmenu

"
" 表示
"
" 括弧の対応
set showmatch
set matchtime=1
" シンタックスハイライトを有効に
syntax enable
" 行番号を有効に
set number
" カーソル位置の表示
set ruler
" カーソル行をハイライト
set cursorline
" 不可視文字の表示
set list
set listchars=tab:»-,trail:-,eol:↲,extends:»,precedes:«,nbsp:%

"
" 検索
"
" 検索結果をハイライト
set hlsearch
" インクリメンタルサーチを有効化
set smartcase
" 検索時の大文字小文字の区別をなくす
set ignorecase
" 検索時大文字が入ったときのみignorecaseを無効
set smartcase



""""""""""""""""""""""
" ファイルごとの設定 "
""""""""""""""""""""""
augroup MyXML
  autocmd!
  autocmd Filetype xml inoremap <buffer> </ </<C-x><C-o>
augroup END



"""""""""""""""
" colorscheme "
"""""""""""""""
" 256色対応
set t_Co=256
" Truecolor
set termguicolors
" colorsheme
colorscheme morning


set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_enable_signs = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:syntastic_python_checker = ['pylint']
