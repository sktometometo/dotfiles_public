#
# Vim8をNeoVim対応にする
#
[[plugins]]
if = "!has('nvim')"
repo = 'roxma/nvim-yarp'
[[plugins]]
if = "!has('nvim')"
repo = 'roxma/vim-hug-neovim-rpc'

#
# UI for dain update
#
[[plugins]]
repo = 'wsdjeg/dein-ui.vim'

#
# Formatter
#
#[[plugins]]
#repo = 'Chiel92/vim-autoformat'


#
# Completion
#
#[[plugins]]
#repo = 'Shougo/deoplete.nvim'
#hook_add = '''
#    let g:deoplete#enable_at_startup = 1
#    " call deoplete#enable()
#    " call deoplete#custom#option({
#    " \   'auto_complete_delay': 200,
#    " \   'smart_case': v:true,
#    " \   })
#'''
#[[plugins]]
#repo = 'Shougo/neco-vim'
#depends = ['deoplete.nvim']
## for python
#[[plugins]]
#repo = 'deoplete-plugins/deoplete-jedi'
#on_ft = 'python'
#depends = ['deoplete.nvim']
#hook_add = '''
#    " let g:deoplete#sources#jedi#python_path = '/usr/local/lib/python3.6'
#'''

#[[plugins]]
#repo = 'deoplete-plugins/deoplete-clang'
#on_ft = ['c', 'cpp', 'cmake']
#depends = ['deoplete.nvim']
#hook_add = '''
#    let g:deoplete#sources#clang#libclang_path = '/usr/lib/llvm-6.0/lib/'
#    let g:deoplete#sources#clang#clang_header = '/usr/include/clang/'
#    let g:deoplete#sources#clang#sort_algo = 'priority'
#    let g:deoplete#sources#clang#clang_complete_database="./build/"
#'''


#[[plugins]]
#repo = 'Shougo/denite.nvim'
#hook_add = '''
#    autocmd FileType denite call s:denite_my_settings()
#    function! s:denite_my_settings() abort
#        nnoremap <silent><buffer><expr> <CR>
#        \ denite#do_map('do_action')
#        nnoremap <silent><buffer><expr> d
#        \ denite#do_map('do_action', 'delete')
#        nnoremap <silent><buffer><expr> p
#        \ denite#do_map('do_action', 'preview')
#        nnoremap <silent><buffer><expr> q
#        \ denite#do_map('quit')
#        nnoremap <silent><buffer><expr> i
#        \ denite#do_map('open_filter_buffer')
#        nnoremap <silent><buffer><expr> <Space>
#        \ denite#do_map('toggle_select').'j'
#    endfunction
#'''


#
# Git wrapper plugin
#
[[plugins]]
repo = 'tpope/vim-fugitive'


#
# Status bar plugins
#
[[plugins]]
depends = ['vim-airline-themes', 'fugitive.vim']
hook_add = '''
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
    " C-p や C-n でバッファの切り替えを行い, タブ移動を可能にする
    nmap <C-p> <Plug>AirlineSelectPrevTab
    nmap <C-n> <Plug>AirlineSelectNextTab
'''
repo = 'vim-airline/vim-airline'
[[plugins]]
hook_add = '''
    let g:airline_theme='simple'
'''
repo = 'vim-airline/vim-airline-themes'


#
# vim lsp
#
[[plugins]]
hook_add = '''
"    autocmd BufWritePre * call execute('LspDocumentFormatSync')
'''
repo = 'prabirshrestha/vim-lsp'
[[plugins]]
hook_add = '''
    inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
    inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
    inoremap <expr> <cr>    pumvisible() ? asyncomplete#close_popup() : "\<cr>"
'''
repo = 'prabirshrestha/asyncomplete.vim'
[[plugins]]
hook_add = '''
   " Enable flake8
   let g:lsp_settings = {
   \   'pylsp-all': {
   \     'workspace_config': {
   \       'pylsp': {
   \         'configurationSources': ['flake8'],
   \         'plugins': {
   \           'flake8': {
   \             'enabled': 1
   \           },
   \           'mccabe': {
   \             'enabled': 0
   \           },
   \           'pycodestyle': {
   \             'enabled': 0
   \           },
   \           'pyflakes': {
   \             'enabled': 0
   \           },
   \         }
   \       }
   \     }
   \   }
   \ }
'''
repo = 'mattn/vim-lsp-settings'

[[plugins]]
hook_add = '''
    let g:UltiSnipsExpandTrigger = '<tab>'
    let g:UltiSnipsJumpForwardTrigger = '<tab>'
    let g:UltiSnipsJumpBackwardTrigger = '<s-tab>'
'''
on_ft = ['tex']
repo = 'lervag/vimtex'

[[plugins]]
on_ft = ['cmake']
repo = 'pboettch/vim-cmake-syntax'

[[plugins]]
on_ft = ['asciidoc']
repo = 'asciidoc/vim-asciidoc'

[[plugins]]
on_ft = ['arduino']
repo = 'sudar/vim-arduino-syntax'

[[plugins]]
on_ft = ['toml']
repo = 'cespare/vim-toml'

[[plugins]]
hook_add = '''
let g:rustfmt_autosave = 1
'''
on_ft = ['rust', 'toml']
repo = 'rust-lang/rust.vim'
