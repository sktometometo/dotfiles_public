# ~/.bashrc: executed by bash(1) for non-login shells.

# ROS workspaces directory
ROS_WORKSPACES=$HOME/ros
ROS2_WORKSPACES=$HOME/ros2

base_setup_script_ROS1=""
base_setup_script_ROS2=""
# Source setup.bash
if [ $(lsb_release -sr) == "14.04" ]; then
    base_setup_script_ROS1=/opt/ros/indigo/setup.bash
elif [ $(lsb_release -sr ) == "16.04" ]; then
    base_setup_script_ROS1=/opt/ros/kinetic/setup.bash
elif [ $(lsb_release -sr ) == "18.04" ]; then
    base_setup_script_ROS1=/opt/ros/melodic/setup.bash
elif [ $(lsb_release -sr ) == "20.04" ]; then
    base_setup_script_ROS1=/opt/ros/noetic/setup.bash
    base_setup_script_ROS2=/opt/ros/foxy/setup.bash
else
    echo "[bashrc_ROS][ERROR] Unknown ubuntu version, cannot source setup.bash for ROS"
fi

# ROSCONSOLE configuration
export ROSCONSOLE_FORMAT='[${severity}] [WallTime: ${time}] [node:${node}] [func:${function}]: ${message}'

#
function setup_ros1() {
    if [[ -e $base_setup_script_ROS1 ]]; then
        source $base_setup_script_ROS1
        echo "[bashrc_ROS][INFO] loaded $base_setup_script_ROS1"
    fi
}

function setup_ros2() {
    if [[ -e $base_setup_script_ROS2 ]]; then
        source $base_setup_script_ROS2
        echo "[bashrc_ROS][INFO] loaded $base_setup_script_ROS2"
    fi
}

# ROS workspace configuration
echo "[bashrc_ROS][INFO] please do set_workspace to checkout ros workspace"
export workspacename=''
function set_workspace() {

    if [ -z "$ROS_VERSION" ]; then
        echo "[bashrc_ROS][ERROR] please setup ros1 or ros2 first."
        return 0
    fi

    if [[ $ROS_VERSION == "1" ]]; then
        TEMP_WORKSPACES=$ROS_WORKSPACES/*
    elif [[ $ROS_VERSION == "2" ]]; then
        TEMP_WORKSPACES=$ROS2_WORKSPACES/*
    fi
    TEMP_dirarray=()
    for filepath in $TEMP_WORKSPACES; do
        if [ -d $filepath ]; then
            TEMP_dirarray+=("$filepath")
        fi
    done

    if [ $# -ne 1 ]; then
        index=0
        for i in "${TEMP_dirarray[@]}"; do
            echo "  ${index} : "$i
            index=`expr $index + 1`
        done
        read -p "  Input workspace number. > " number
    else
        number=$1
    fi
    workspacename=${TEMP_dirarray[$number]}

    if [[ $ROS_VERSION == "1" ]]; then
        setup_script=$workspacename"/devel/setup.bash"
    elif [[ $ROS_VERSION == "2" ]]; then
        setup_script=$workspacename"/install/local_setup.bash"
    fi

    echo "[bashrc_ROS][INFO] source $setup_script"
    source $setup_script

    export workspacename
}

function cd_workspace() {
    cd $workspacename
}
